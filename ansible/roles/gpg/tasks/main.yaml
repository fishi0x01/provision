---
- name: distribution specific vars
  include_vars: "{{ ansible_distribution }}{{ ansible_distribution_version }}.yaml"

# TODO: only do this when key does not exist yet
- name: Put trusted keys into chain
  block:
  - name: Copy trusted key
    copy:
      src: files/{{ gpg.trusted_key_long_id }}.asc
      dest: /tmp/{{ gpg.trusted_key_long_id }}.asc
      owner: "{{ machine_user }}"
      group: "{{ machine_user }}"
      mode: '0644'

  - name: Import trusted key
    become: yes
    become_user: "{{ machine_user }}"
    command: "gpg --import /tmp/{{ gpg.trusted_key_long_id }}.asc"

- name: Ensure .ssh dir exists
  file:
    path: "/home/{{ machine_user }}/.ssh"
    state: directory
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: '0755'

- name: Place ssh pub key
  copy:
    src: "files/fishi0x01-ssh.pub"
    dest: "{{ gpg.ssh_pub_file }}"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: "644"

- name: Set gpg-agent.conf
  become: yes
  become_user: "{{ machine_user }}"
  template:
    src: "templates/gpg-agent.conf.j2"
    dest: "{{ gpg.agent_conf_file }}"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: "640"
  notify:
    - "restart gpg-agent"

- name: Set gpg.conf
  become: yes
  become_user: "{{ machine_user }}"
  template:
    src: "templates/gpg.conf.j2"
    dest: "{{ gpg.conf_file }}"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: "640"
  notify:
    - "restart gpg-agent"

- meta: flush_handlers
